{"version":3,"sources":["scripts/main.js"],"names":["inputs","document","querySelectorAll","separateString","word","result","i","toUpperCase","push","toLowerCase","join","addLabels","forEach","input","label","createElement","className","setAttribute","id","textContent","name","placeholder","charAt","slice","parentElement","prepend"],"mappings":";AAAA,aAgCS,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA9BT,IAAMA,EAASC,SAASC,iBAAiB,SAEnCC,EAAiB,SAACC,GAChBC,IADyB,EACzBA,EAAS,GAEDD,EAAAA,EAAAA,GAHiB,IAGX,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAXE,IAAAA,EAAW,EAAA,MACdA,IAAMA,EAAEC,gBACVF,EAAOG,KAAK,KACZF,EAAIA,EAAEG,eAERJ,EAAOG,KAAKF,IARiB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAWxBD,OAAAA,EAAOK,KAAK,KAGfC,EAAY,WAChBX,EAAOY,QAAQ,SAAAC,GACPC,IAAAA,EAAQb,SAASc,cAAc,SAErCD,EAAME,UAAY,cAClBF,EAAMG,aAAa,MAAOJ,EAAMK,IAChCJ,EAAMK,YAAchB,EAAeU,EAAMO,MAAMb,cAE/CM,EAAMQ,YAAcR,EAAMO,KAAKE,OAAO,GAAGf,cACtCJ,EAAeU,EAAMO,KAAKG,MAAM,IACnCV,EAAMW,cAAcC,QAAQX,MAIhCH","file":"main.9fe5e593.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst inputs = document.querySelectorAll('input');\r\n\r\nconst separateString = (word) => {\r\n  const result = [];\r\n\r\n  for (let i of word) {\r\n    if (i === i.toUpperCase()) {\r\n      result.push(' ');\r\n      i = i.toLowerCase();\n    }\r\n    result.push(i);\r\n  }\n\r\n  return result.join('');\r\n};\r\n\r\nconst addLabels = () => {\r\n  inputs.forEach(input => {\r\n    const label = document.createElement('label');\n\r\n    label.className = 'field-label';\r\n    label.setAttribute('for', input.id);\r\n    label.textContent = separateString(input.name).toUpperCase();\r\n\r\n    input.placeholder = input.name.charAt(0).toUpperCase()\r\n     + separateString(input.name.slice(1));\r\n    input.parentElement.prepend(label);\r\n  });\r\n};\r\n\r\naddLabels();\r\n"]}